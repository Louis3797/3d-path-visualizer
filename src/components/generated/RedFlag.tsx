/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Mesh_flag_red: THREE.Mesh;
    Mesh_flag_red_1: THREE.Mesh;
  };
  materials: {
    metal: THREE.MeshStandardMaterial;
    border: THREE.MeshStandardMaterial;
  };
};

export default function Model({ ...props }: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null!);
  const { nodes, materials } = useGLTF(
    "./models/flag/flag_red.glb"
  ) as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <group scale={0.5}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_flag_red.geometry}
          material={materials.metal}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_flag_red_1.geometry}
          material={materials.border}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/flag_red.glb");
